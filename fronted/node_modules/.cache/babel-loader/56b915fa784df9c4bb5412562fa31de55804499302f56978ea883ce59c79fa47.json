{"ast":null,"code":"var _jsxFileName = \"D:\\\\GOIT\\\\REACT\\\\facebook\\\\fronted\\\\src\\\\components\\\\post\\\\ReactsPopup.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reactsArray = [{\n  name: \"like\",\n  image: \"../../../reacts/like.gif\"\n}, {\n  name: \"love\",\n  image: \"../../../reacts/love.gif\"\n}, {\n  name: \"haha\",\n  image: \"../../../reacts/haha.gif\"\n}, {\n  name: \"wow\",\n  image: \"../../../reacts/wow.gif\"\n}, {\n  name: \"sad\",\n  image: \"../../../reacts/sad.gif\"\n}, {\n  name: \"angry\",\n  image: \"../../../reacts/angry.gif\"\n}];\nconst ReactsPopup = ({\n  visible,\n  setVisible\n}) => {\n  //   const [visible, setVisible] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reacts_popup\",\n      children: reactsArray.map((react, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"react\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: react.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = ReactsPopup;\nexport default ReactsPopup;\nvar _c;\n$RefreshReg$(_c, \"ReactsPopup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","reactsArray","name","image","ReactsPopup","visible","setVisible","children","className","map","react","i","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/GOIT/REACT/facebook/fronted/src/components/post/ReactsPopup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst reactsArray = [\r\n  {\r\n    name: \"like\",\r\n    image: \"../../../reacts/like.gif\",\r\n  },\r\n  {\r\n    name: \"love\",\r\n    image: \"../../../reacts/love.gif\",\r\n  },\r\n  {\r\n    name: \"haha\",\r\n    image: \"../../../reacts/haha.gif\",\r\n  },\r\n  {\r\n    name: \"wow\",\r\n    image: \"../../../reacts/wow.gif\",\r\n  },\r\n  {\r\n    name: \"sad\",\r\n    image: \"../../../reacts/sad.gif\",\r\n  },\r\n  {\r\n    name: \"angry\",\r\n    image: \"../../../reacts/angry.gif\",\r\n  },\r\n];\r\n\r\nconst ReactsPopup = ({ visible, setVisible }) => {\r\n  //   const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <div className=\"reacts_popup\">\r\n          {reactsArray.map((react, i) => (\r\n            <div className=\"react\" key={i}>\r\n              <img src={react.image} alt=\"\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReactsPopup;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,WAAW,GAAG,CAClB;EACEC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;AACT,CAAC,EACD;EACED,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;AACT,CAAC,EACD;EACED,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;AACT,CAAC,EACD;EACED,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE;AACT,CAAC,EACD;EACED,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE;AACT,CAAC,EACD;EACED,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAC/C;EACA,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACGF,OAAO,iBACNP,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAD,QAAA,EAC1BN,WAAW,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACxBb,OAAA;QAAKU,SAAS,EAAC,OAAO;QAAAD,QAAA,eACpBT,OAAA;UAAKc,GAAG,EAAEF,KAAK,CAACP,KAAM;UAACU,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADNN,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN,gBACD,CAAC;AAEP,CAAC;AAACC,EAAA,GAfId,WAAW;AAiBjB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}