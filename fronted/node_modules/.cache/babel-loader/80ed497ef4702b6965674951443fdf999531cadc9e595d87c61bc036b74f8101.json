{"ast":null,"code":"var _jsxFileName = \"D:\\\\GOIT\\\\REACT\\\\facebook\\\\fronted\\\\src\\\\pages\\\\reset\\\\CodeVerification.jsx\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport LoginInput from \"../../components/inputs/logininput/LoginInput\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeVerification = ({\n  code,\n  setCode,\n  error\n}) => {\n  const validateCode = Yup.object({\n    code: Yup.string().required(\"Code is required\").min(\"5\", \"Code must be 5 characters.\").max(\"5\", \"Code must be 5 characters.\")\n  });\n  const verifyCode = async () => {\n    try {} catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset_form_header\",\n      children: \"Code verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset_form_text\",\n      children: \"Please enter code that been sent to your email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: {\n        code\n      },\n      validationSchema: validateCode,\n      onSubmit: () => {\n        verifyCode();\n      },\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(LoginInput, {\n          type: \"text\",\n          name: \"code\",\n          onChange: e => setCode(e.target.value),\n          placeholder: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error_text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset_form_btns\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"gray_btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"blue_btn\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = CodeVerification;\nexport default CodeVerification;\nvar _c;\n$RefreshReg$(_c, \"CodeVerification\");","map":{"version":3,"names":["Form","Formik","React","LoginInput","Link","Yup","jsxDEV","_jsxDEV","CodeVerification","code","setCode","error","validateCode","object","string","required","min","max","verifyCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","enableReinitialize","initialValues","validationSchema","onSubmit","formik","type","name","onChange","e","target","value","placeholder","to","_c","$RefreshReg$"],"sources":["D:/GOIT/REACT/facebook/fronted/src/pages/reset/CodeVerification.jsx"],"sourcesContent":["import { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport LoginInput from \"../../components/inputs/logininput/LoginInput\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst CodeVerification = ({ code, setCode, error }) => {\r\n  const validateCode = Yup.object({\r\n    code: Yup.string()\r\n      .required(\"Code is required\")\r\n      .min(\"5\", \"Code must be 5 characters.\")\r\n      .max(\"5\", \"Code must be 5 characters.\"),\r\n  });\r\n\r\n  const verifyCode = async () => {\r\n    try {\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset_form\">\r\n      <div className=\"reset_form_header\">Code verification</div>\r\n      <div className=\"reset_form_text\">\r\n        Please enter code that been sent to your email.\r\n      </div>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={{\r\n          code,\r\n        }}\r\n        validationSchema={validateCode}\r\n        onSubmit={() => {\r\n          verifyCode();\r\n        }}\r\n      >\r\n        {(formik) => (\r\n          <Form>\r\n            <LoginInput\r\n              type=\"text\"\r\n              name=\"code\"\r\n              onChange={(e) => setCode(e.target.value)}\r\n              placeholder=\"Code\"\r\n            />\r\n            {error && <div className=\"error_text\">{error}</div>}\r\n            <div className=\"reset_form_btns\">\r\n              <Link to=\"/login\" className=\"gray_btn\">\r\n                Cancel\r\n              </Link>\r\n              <button type=\"submit\" className=\"blue_btn\">\r\n                Continue\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeVerification;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}